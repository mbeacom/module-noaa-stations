data_mixins: 
  station:
    fields:
      station: 
        type: "@django.ForeignKey"
        relation: station
        options: 
          "null": true
          on_delete: "@django.PROTECT"
          editable: false

data_base:
  station:
    # Every model (usually) based on resource
    base: resourse
    mixins: [station]
    id_fields: [number]
    meta: 
      # Number alone probably unique, demonstrate compound key
      unique_together: [number, name]
      # Updates must define station
      scope: station

data:
  # Actual data models turned into tables
  # Fields 'name', 'id', 'updated', 'created' implicitly
  # created by base resource (id/updated/created internal)
  station:
    # Environment extends resource in Zimagi core
    base: environment
    # Primary key (not necessarily externally facing)
    id_fields: [number, name]
    # Unique identifier within the scope
    key: number
    roles: 
      # Redundant to specify 'admin'
      edit: [noaa-admin, admin]
      # Editors are automatically viewers
      # Public does not require authentication 
      # (viewer will authenticate if public were not listed)
      view: [viewer, public]
    fields:
      number:       
        type: "@django.CharField"
        options: 
          "null": false
          max_length: 255
          # editable is default (not specified)
      lat:
        # In degrees
        type: "@django.FloatField"
        options:
          "null": true
      lon:
        type: "@django.FloatField"
        options:
          "null": true
      elevation:
        # In meters
        type: "@django.FloatField"
        options:
          "null": true
    meta:
      unique_together: [number, name]
      # Display ordered by elevation and number
      ordering: [elevation, number]
      # Fuzzy string search
      search_fields: [number, name]


